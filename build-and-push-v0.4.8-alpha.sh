#!/bin/bash

# Script de build et push pour Meeshy v0.4.8-alpha
# Int√©gration du QuantizedMLService avec performances am√©lior√©es

set -e

VERSION="0.4.8-alpha"
REGISTRY="isopen"

echo "üöÄ BUILD ET PUSH MEESHY v${VERSION}"
echo "=================================="
echo "üìÖ Date: $(date)"
echo "üéØ Version: ${VERSION}"
echo "üèóÔ∏è  Architecture: Multi-plateforme (AMD64 + ARM64)"
echo ""

# Couleurs pour les logs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rifier que docker buildx est disponible
if ! docker buildx version > /dev/null 2>&1; then
    log_error "docker buildx n'est pas disponible"
    exit 1
fi

# Cr√©er un nouveau builder si n√©cessaire
log_info "üîß Configuration de docker buildx..."
docker buildx create --name meeshy-builder --use --driver docker-container 2>/dev/null || true

# 1. Build et push du service Translator (avec QuantizedMLService)
log_info "üîß Build du service Translator (QuantizedMLService)..."
cd translator

docker buildx build \
    --platform linux/amd64,linux/arm64 \
    --tag ${REGISTRY}/meeshy-translator:${VERSION} \
    --tag ${REGISTRY}/meeshy-translator:latest \
    --push \
    --build-arg QUANTIZATION_LEVEL=float32 \
    --build-arg TRANSLATION_WORKERS=10 \
    .

log_success "Translator build√© et pouss√©: ${REGISTRY}/meeshy-translator:${VERSION}"

cd ..

# 2. Build et push du service Gateway
log_info "üîß Build du service Gateway..."
cd gateway

docker buildx build \
    --platform linux/amd64,linux/arm64 \
    --tag ${REGISTRY}/meeshy-gateway:${VERSION} \
    --tag ${REGISTRY}/meeshy-gateway:latest \
    --push \
    .

log_success "Gateway build√© et pouss√©: ${REGISTRY}/meeshy-gateway:${VERSION}"

cd ..

# 3. Build et push du service Frontend
log_info "üîß Build du service Frontend..."
cd frontend

docker buildx build \
    --platform linux/amd64,linux/arm64 \
    --tag ${REGISTRY}/meeshy-frontend:${VERSION} \
    --tag ${REGISTRY}/meeshy-frontend:latest \
    --push \
    .

log_success "Frontend build√© et pouss√©: ${REGISTRY}/meeshy-frontend:${VERSION}"

cd ..

# 4. V√©rification des images
log_info "üîç V√©rification des images pouss√©es..."

echo ""
echo "üìã Images disponibles sur Docker Hub:"
echo "====================================="

docker buildx imagetools inspect ${REGISTRY}/meeshy-translator:${VERSION} | grep -E "(OS/Arch|Digest)" || log_warning "Translator non trouv√©"
docker buildx imagetools inspect ${REGISTRY}/meeshy-gateway:${VERSION} | grep -E "(OS/Arch|Digest)" || log_warning "Gateway non trouv√©"
docker buildx imagetools inspect ${REGISTRY}/meeshy-frontend:${VERSION} | grep -E "(OS/Arch|Digest)" || log_warning "Frontend non trouv√©"

echo ""
log_success "üéâ Build et push termin√©s avec succ√®s !"
echo ""
echo "üìä R√âSUM√â:"
echo "=========="
echo "‚úÖ Translator: ${REGISTRY}/meeshy-translator:${VERSION} (QuantizedMLService)"
echo "‚úÖ Gateway: ${REGISTRY}/meeshy-gateway:${VERSION}"
echo "‚úÖ Frontend: ${REGISTRY}/meeshy-frontend:${VERSION}"
echo ""
echo "üöÄ Am√©liorations v${VERSION}:"
echo "   ‚Ä¢ QuantizedMLService int√©gr√© (tous les mod√®les)"
echo "   ‚Ä¢ Support float32 pour stabilit√© et performance"
echo "   ‚Ä¢ Architecture multi-plateforme (AMD64 + ARM64)"
echo "   ‚Ä¢ Optimisations m√©moire et CPU"
echo ""
echo "üìù Prochaines √©tapes:"
echo "   ‚Ä¢ git add . && git commit -m 'feat: int√©gration QuantizedMLService v${VERSION}'"
echo "   ‚Ä¢ git tag v${VERSION}"
echo "   ‚Ä¢ git push origin main --tags"
