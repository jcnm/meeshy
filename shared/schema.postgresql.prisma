// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        String    @id @default(cuid())
  uuid                      String    @unique @default(uuid())
  username                  String    @unique
  firstName                 String?
  lastName                  String?
  email                     String    @unique
  password                  String
  displayName               String?
  isOnline                  Boolean   @default(false)
  lastSeen                  DateTime?
  lastActiveAt              DateTime  @default(now())
  systemLanguage            String    @default("fr")
  regionalLanguage          String    @default("fr")
  autoTranslateEnabled      Boolean   @default(true)
  translateToSystemLanguage Boolean   @default(true)
  translateToRegionalLanguage Boolean @default(false)
  useCustomDestination      Boolean   @default(false)
  role                      Role      @default(USER)
  isActive                  Boolean   @default(true)
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt

  // Relations
  conversations            Conversation[]
  messages                Message[]
  translations            Translation[]
  userPreferences         UserPreference[]

  @@map("User")
}

model Conversation {
  id          String   @id @default(cuid())
  uuid        String   @unique @default(uuid())
  title       String?
  isGroup     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  participants ConversationParticipant[]
  messages    Message[]
  translations Translation[]

  @@map("Conversation")
}

model ConversationParticipant {
  id             String       @id @default(cuid())
  conversationId String
  userId         String
  role           ParticipantRole @default(MEMBER)
  joinedAt       DateTime     @default(now())
  leftAt         DateTime?

  // Relations
  conversation Conversation @relation(fields: [conversationId], references: [id])
  user        User         @relation(fields: [userId], references: [id])

  @@unique([conversationId, userId])
  @@map("ConversationParticipant")
}

model Message {
  id             String   @id @default(cuid())
  uuid           String   @unique @default(uuid())
  conversationId String
  userId         String
  content        String
  contentType    ContentType @default(TEXT)
  isTranslated   Boolean  @default(false)
  originalLanguage String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  conversation Conversation @relation(fields: [conversationId], references: [id])
  user        User         @relation(fields: [userId], references: [id])
  translations Translation[]

  @@map("Message")
}

model Translation {
  id             String   @id @default(cuid())
  uuid           String   @unique @default(uuid())
  messageId      String?
  userId         String?
  conversationId String?
  originalText   String
  translatedText String
  sourceLanguage String
  targetLanguage String
  translationEngine String
  confidence     Float?
  createdAt      DateTime @default(now())

  // Relations
  message       Message?       @relation(fields: [messageId], references: [id])
  user          User?          @relation(fields: [userId], references: [id])
  conversation  Conversation?   @relation(fields: [conversationId], references: [id])

  @@map("Translation")
}

model UserPreference {
  id          String   @id @default(cuid())
  userId      String   @unique
  theme       String   @default("light")
  language    String   @default("fr")
  notifications Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@map("UserPreference")
}

enum Role {
  USER
  ADMIN
  MODO
  AUDIT
  ANALYST
  BIGBOSS
}

enum ParticipantRole {
  OWNER
  ADMIN
  MODERATOR
  MEMBER
  GUEST
}

enum ContentType {
  TEXT
  IMAGE
  VIDEO
  AUDIO
  FILE
  LOCATION
  CONTACT
}
