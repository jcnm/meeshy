#!/bin/bash

# Script de build pour l'image Docker MongoDB de la Gateway Meeshy
# Usage: ./build-mongodb.sh [version]

set -e

# Configuration
IMAGE_NAME="isopen/meeshy-gateway"
TAG_MONGODB="mongodb"
TAG_OVH="mongodb-ovh"
VERSION=${1:-$(date +%Y%m%d-%H%M%S)}

echo "üöÄ D√©marrage du build MongoDB pour Meeshy Gateway..."
echo "üì¶ Image: ${IMAGE_NAME}"
echo "üè∑Ô∏è  Tags: ${TAG_MONGODB}, ${TAG_OVH}"
echo "üìã Version: ${VERSION}"
echo "üñ•Ô∏è  Plateformes: linux/amd64, linux/arm64"
echo ""

# V√©rification de la pr√©sence du Dockerfile
if [ ! -f "Dockerfile.mongodb" ]; then
    echo "‚ùå Erreur: Dockerfile.mongodb non trouv√© dans le r√©pertoire courant"
    exit 1
fi

# V√©rification de la pr√©sence de docker buildx
if ! docker buildx version > /dev/null 2>&1; then
    echo "‚ùå Erreur: docker buildx n'est pas disponible"
    echo "üí° Installez Docker Buildx ou activez-le avec: docker buildx install"
    exit 1
fi

# Cr√©ation du builder multi-platform si n√©cessaire
echo "üîß Configuration du builder multi-platform..."
docker buildx create --name meeshy-mongodb-builder --use --driver docker-container 2>/dev/null || true

# Build de l'image
echo "üèóÔ∏è  Construction de l'image Docker..."
docker buildx build \
    --platform linux/amd64,linux/arm64 \
    --progress=plain \
    -t "${IMAGE_NAME}:${TAG_MONGODB}" \
    -t "${IMAGE_NAME}:${TAG_MONGODB}-${VERSION}" \
    -t "${IMAGE_NAME}:${TAG_OVH}" \
    -t "${IMAGE_NAME}:${TAG_OVH}-${VERSION}" \
    -f Dockerfile.mongodb \
    . \
    --push

echo ""
echo "‚úÖ Build termin√© avec succ√®s!"
echo "üì¶ Images cr√©√©es:"
echo "   - ${IMAGE_NAME}:${TAG_MONGODB}"
echo "   - ${IMAGE_NAME}:${TAG_MONGODB}-${VERSION}"
echo "   - ${IMAGE_NAME}:${TAG_OVH}"
echo "   - ${IMAGE_NAME}:${TAG_OVH}-${VERSION}"
echo ""
echo "üñ•Ô∏è  Plateformes support√©es: linux/amd64, linux/arm64"
echo "üöÄ Images pouss√©es vers le registry Docker Hub"
echo ""
echo "üí° Pour tester localement:"
echo "   docker run -p 3000:3000 ${IMAGE_NAME}:${TAG_MONGODB}"


