# Caddyfile for Meeshy
# Automatic HTTPS with Let's Encrypt

# Main domain configuration
{$DOMAIN:localhost} {
    # Automatic HTTPS with Let's Encrypt
    tls {$CERTBOT_EMAIL:admin@meeshy.me}
    
    # Security headers
    header {
        # Enable HSTS
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        
        # Prevent clickjacking
        X-Frame-Options "DENY"
        
        # Prevent MIME type sniffing
        X-Content-Type-Options "nosniff"
        
        # XSS protection
        X-XSS-Protection "1; mode=block"
        
        # Referrer policy
        Referrer-Policy "strict-origin-when-cross-origin"
        
        # Content Security Policy
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;"
        
        # Remove server header
        -Server
    }
    
    # Rate limiting
    rate_limit {
        zone static {
            key {remote_host}
            events 100
            window 1m
        }
    }
    
    # API Gateway routes
    handle /api/* {
        reverse_proxy gateway:3000 {
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    # WebSocket routes
    handle /ws/* {
        reverse_proxy gateway:3000 {
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up Connection {>Connection}
            header_up Upgrade {>Upgrade}
        }
    }
    
    # Translation API routes
    handle /translate/* {
        reverse_proxy translator:8000 {
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            
            # Longer timeout for ML processing
            timeout 120s
        }
    }
    
    # Health check endpoint
    handle /health {
        respond "OK" 200
    }
    
    # Admin panel (optional IP restriction)
    handle /admin/* {
        # Uncomment to restrict to specific IPs
        # @allowed remote_ip 192.168.1.0/24
        # abort @not_allowed
        
        reverse_proxy gateway:3000 {
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    # Frontend (catch-all)
    handle {
        reverse_proxy frontend:3100 {
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    # Logging
    log {
        output file /var/log/caddy/access.log {
            roll_size 100mb
            roll_keep 5
            roll_keep_for 720h
        }
        format json
    }
}

# Development fallback (when no domain is set)
localhost:80, localhost:443 {
    tls internal
    
    # Same configuration as above but for localhost
    header {
        Strict-Transport-Security "max-age=31536000; includeSubDomains"
        X-Frame-Options "DENY"
        X-Content-Type-Options "nosniff"
        X-XSS-Protection "1; mode=block"
        -Server
    }
    
    handle /api/* {
        reverse_proxy gateway:3000
    }
    
    handle /ws/* {
        reverse_proxy gateway:3000
    }
    
    handle /translate/* {
        reverse_proxy translator:8000
    }
    
    handle /health {
        respond "OK" 200
    }
    
    handle {
        reverse_proxy frontend:3100
    }
}
