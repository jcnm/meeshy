#!/bin/bash

echo "üîç Diagnostic des services Meeshy"
echo "=================================="

# V√©rifier si Docker est en cours d'ex√©cution
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker n'est pas en cours d'ex√©cution"
    exit 1
fi

echo "‚úÖ Docker est actif"

# V√©rifier les conteneurs
echo ""
echo "üì¶ √âtat des conteneurs:"
docker ps --filter "name=meeshy" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

# V√©rifier les ports
echo ""
echo "üîå Ports √©cout√©s:"
netstat -an | grep -E "(3000|3100|8000)" | head -10

# Tester la connectivit√© au gateway
echo ""
echo "üåê Test de connectivit√© au gateway:"
if curl -s http://localhost:3000/health > /dev/null; then
    echo "‚úÖ Gateway HTTP accessible sur :3000"
else
    echo "‚ùå Gateway HTTP non accessible sur :3000"
fi

# Test WebSocket (n√©cessite wscat)
echo ""
echo "üîó Test WebSocket (si wscat est install√©):"
if command -v wscat &> /dev/null; then
    timeout 3 wscat -c ws://localhost:3000 --close || echo "‚ùå WebSocket non accessible"
else
    echo "‚ö†Ô∏è wscat non install√© - impossible de tester WebSocket"
    echo "   Installation: npm install -g wscat"
fi

echo ""
echo "üìã Variables d'environnement frontend:"
echo "NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL:-'non d√©finie'}"
echo "NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-'non d√©finie'}"

echo ""
echo "üèÅ Diagnostic termin√©"
