#!/bin/bash

# Script de v√©rification du cache des mod√®les TensorFlow.js dans Meeshy

echo "üîç === V√âRIFICATION DU CACHE DES MOD√àLES MEESHY ==="
echo ""

# Fonction pour v√©rifier si l'application est en cours d'ex√©cution
check_app_running() {
    if curl -s http://localhost:3000 > /dev/null; then
        echo "‚úÖ Application Meeshy d√©tect√©e sur http://localhost:3000"
        return 0
    else
        echo "‚ùå Application Meeshy non accessible sur http://localhost:3000"
        echo "üí° Lancez l'application avec: npm run dev"
        return 1
    fi
}

# Fonction pour ouvrir les outils de d√©veloppement
open_dev_tools() {
    echo ""
    echo "üõ†Ô∏è V√âRIFICATION MANUELLE RECOMMAND√âE:"
    echo ""
    echo "1. Ouvrez http://localhost:3000 dans votre navigateur"
    echo "2. Appuyez sur F12 pour ouvrir les outils de d√©veloppement"
    echo "3. Allez dans l'onglet 'Console'"
    echo "4. Tapez ces commandes pour diagnostiquer:"
    echo ""
    echo "   // V√©rifier localStorage"
    echo "   console.log('localStorage models:', JSON.parse(localStorage.getItem('meeshy-loaded-models') || '{}'));"
    echo ""
    echo "   // V√©rifier IndexedDB"
    echo "   await new Promise(resolve => {"
    echo "     const request = indexedDB.open('meeshy-models-cache');"
    echo "     request.onsuccess = () => {"
    echo "       const db = request.result;"
    echo "       const transaction = db.transaction(['models'], 'readonly');"
    echo "       const store = transaction.objectStore('models');"
    echo "       const getAll = store.getAll();"
    echo "       getAll.onsuccess = () => {"
    echo "         console.log('IndexedDB models:', getAll.result);"
    echo "         resolve();"
    echo "       };"
    echo "     };"
    echo "   });"
    echo ""
    echo "   // V√©rifier mod√®les TensorFlow.js en m√©moire"
    echo "   console.log('TensorFlow models:', window.translationModels?.getLoadedModels());"
    echo ""
    echo "5. Allez dans l'onglet 'Application' > 'Storage'"
    echo "6. V√©rifiez 'Local Storage' et 'IndexedDB' pour voir les donn√©es des mod√®les"
    echo ""
}

# Fonction pour cr√©er un script de diagnostic c√¥t√© client
create_diagnostic_script() {
    cat > /tmp/meeshy-model-diagnostic.js << 'EOF'
// Script de diagnostic des mod√®les Meeshy
(async function diagnoseModels() {
    console.log('üîç === DIAGNOSTIC DES MOD√àLES MEESHY ===');
    
    // 1. V√©rifier localStorage
    try {
        const localStorageModels = JSON.parse(localStorage.getItem('meeshy-loaded-models') || '{}');
        console.log('üì± localStorage models:', localStorageModels);
        
        const downloadedCount = Object.values(localStorageModels).filter(Boolean).length;
        console.log(`üìä ${downloadedCount} mod√®les marqu√©s t√©l√©charg√©s dans localStorage`);
    } catch (error) {
        console.error('‚ùå Erreur lecture localStorage:', error);
    }
    
    // 2. V√©rifier IndexedDB
    try {
        const dbRequest = indexedDB.open('meeshy-models-cache');
        dbRequest.onsuccess = () => {
            const db = dbRequest.result;
            const transaction = db.transaction(['models'], 'readonly');
            const store = transaction.objectStore('models');
            const getAllRequest = store.getAll();
            
            getAllRequest.onsuccess = () => {
                const cachedModels = getAllRequest.result;
                console.log('üíæ IndexedDB cached models:', cachedModels);
                console.log(`üìä ${cachedModels.length} mod√®les en cache IndexedDB`);
                
                const totalSize = cachedModels.reduce((sum, model) => sum + (model.info?.fileSize || 0), 0);
                console.log(`üíΩ Taille totale du cache: ${Math.round(totalSize / 1024 / 1024)}MB`);
            };
            
            getAllRequest.onerror = () => {
                console.error('‚ùå Erreur lecture IndexedDB');
            };
        };
        
        dbRequest.onerror = () => {
            console.error('‚ùå Impossible d\'ouvrir IndexedDB');
        };
    } catch (error) {
        console.error('‚ùå Erreur IndexedDB:', error);
    }
    
    // 3. V√©rifier TensorFlow.js en m√©moire
    try {
        if (window.translationModels) {
            const loadedModels = window.translationModels.getLoadedModels();
            console.log('üß† TensorFlow.js models en m√©moire:', loadedModels);
            console.log(`üìä ${loadedModels.length} mod√®les charg√©s en m√©moire`);
        } else {
            console.warn('‚ö†Ô∏è translationModels non disponible sur window');
        }
    } catch (error) {
        console.error('‚ùå Erreur TensorFlow.js:', error);
    }
    
    // 4. Recommandations
    console.log('');
    console.log('üí° RECOMMANDATIONS:');
    console.log('- Si localStorage a des mod√®les mais TensorFlow.js est vide ‚Üí probl√®me de synchronisation');
    console.log('- Si IndexedDB est vide ‚Üí les mod√®les ne sont pas vraiment t√©l√©charg√©s');
    console.log('- Utilisez le bouton "Synchroniser" dans les tests avanc√©s');
    
    console.log('üîç === FIN DU DIAGNOSTIC ===');
})();
EOF

    echo "üìù Script de diagnostic cr√©√©: /tmp/meeshy-model-diagnostic.js"
    echo "üí° Copiez-collez ce script dans la console du navigateur :"
    echo ""
    cat /tmp/meeshy-model-diagnostic.js
}

# Fonction principale
main() {
    echo "Date: $(date)"
    echo ""
    
    if check_app_running; then
        echo ""
        echo "üåê Ouverture de l'application..."
        open "http://localhost:3000/settings" 2>/dev/null || echo "üí° Ouvrez manuellement: http://localhost:3000/settings"
        
        sleep 2
        open_dev_tools
        echo ""
        create_diagnostic_script
    else
        echo ""
        echo "üöÄ Pour d√©marrer l'application :"
        echo "   cd $(pwd)"
        echo "   npm run dev"
        echo ""
        echo "Puis relancez ce script."
    fi
    
    echo ""
    echo "üìö √âTAPES DE V√âRIFICATION:"
    echo "1. Allez dans Param√®tres > Mod√®les"
    echo "2. T√©l√©chargez un mod√®le (ex: mT5 Small)"
    echo "3. Allez dans Param√®tres > Test Avanc√©"
    echo "4. V√©rifiez si le mod√®le appara√Æt dans la liste"
    echo "5. Si non, cliquez sur 'Synchroniser'"
    echo ""
    echo "üîç === V√âRIFICATION TERMIN√âE ==="
}

# Ex√©cution
main
