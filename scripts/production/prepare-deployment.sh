#!/bin/bash

# Script de pr√©paration du d√©ploiement en production
# Guide l'utilisateur √† travers les √©tapes de pr√©paration

set -e

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Configuration
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$(dirname "$SCRIPT_DIR")")"
SECRETS_DIR="$PROJECT_ROOT/secrets"

# Fonctions utilitaires
log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }
log_step() { echo -e "${CYAN}üîÑ $1${NC}"; }

echo -e "${BLUE}üöÄ Pr√©paration du D√©ploiement en Production Meeshy${NC}"
echo -e "${BLUE}================================================${NC}"
echo ""

# √âtape 1: V√©rification des pr√©requis
log_step "√âtape 1: V√©rification des pr√©requis..."

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "$PROJECT_ROOT/package.json" ]; then
    log_error "Ce script doit √™tre ex√©cut√© depuis la racine du projet Meeshy"
    exit 1
fi

# V√©rifier que les scripts existent
required_scripts=(
    "$SCRIPT_DIR/generate-production-config.sh"
    "$SCRIPT_DIR/reset-database.sh"
    "$SCRIPT_DIR/deploy-production.sh"
    "$PROJECT_ROOT/scripts/deployment/build-and-push-docker-images.sh"
    "$PROJECT_ROOT/scripts/meeshy-deploy.sh"
)

for script in "${required_scripts[@]}"; do
    if [ ! -f "$script" ]; then
        log_error "Script requis non trouv√©: $script"
        exit 1
    fi
done

log_success "Tous les scripts requis sont pr√©sents"

# √âtape 2: V√©rification des configurations
log_step "√âtape 2: V√©rification des configurations..."

if [ ! -f "$SECRETS_DIR/production-secrets.env" ]; then
    log_warning "Fichier de secrets non trouv√©, g√©n√©ration..."
    bash "$SCRIPT_DIR/generate-production-config.sh" --force
else
    log_success "Fichier de secrets trouv√©"
fi

# √âtape 3: Affichage des informations de connexion
log_step "√âtape 3: Informations de connexion g√©n√©r√©es..."

echo -e "${YELLOW}üîê Utilisateurs par d√©faut:${NC}"
echo -e "  ‚Ä¢ ${CYAN}Admin:${NC} admin / $(grep "^ADMIN_PASSWORD=" "$SECRETS_DIR/production-secrets.env" | cut -d'=' -f2)"
echo -e "  ‚Ä¢ ${CYAN}Meeshy:${NC} meeshy / $(grep "^MEESHY_PASSWORD=" "$SECRETS_DIR/production-secrets.env" | cut -d'=' -f2)"
echo -e "  ‚Ä¢ ${CYAN}Atabeth:${NC} atabeth / $(grep "^ATABETH_PASSWORD=" "$SECRETS_DIR/production-secrets.env" | cut -d'=' -f2)"

echo ""
echo -e "${YELLOW}üìß Emails configur√©s:${NC}"
echo -e "  ‚Ä¢ ${CYAN}Admin:${NC} $(grep "^ADMIN_EMAIL=" "$SECRETS_DIR/production-secrets.env" | cut -d'=' -f2)"
echo -e "  ‚Ä¢ ${CYAN}Meeshy:${NC} $(grep "^MEESHY_EMAIL=" "$SECRETS_DIR/production-secrets.env" | cut -d'=' -f2)"
echo -e "  ‚Ä¢ ${CYAN}Atabeth:${NC} $(grep "^ATABETH_EMAIL=" "$SECRETS_DIR/production-secrets.env" | cut -d'=' -f2)"

echo ""
echo -e "${YELLOW}üåê Domaine configur√©:${NC}"
echo -e "  ‚Ä¢ ${CYAN}$(grep "^DOMAIN=" "$SECRETS_DIR/production-secrets.env" | cut -d'=' -f2)${NC}"

# √âtape 4: Instructions de d√©ploiement
log_step "√âtape 4: Instructions de d√©ploiement..."

echo ""
echo -e "${YELLOW}üìã Prochaines √©tapes:${NC}"
echo ""
echo -e "${CYAN}1. Transf√©rer le fichier de secrets sur Digital Ocean:${NC}"
echo -e "   ${GREEN}scp secrets/production-secrets.env root@DROPLET_IP:/opt/meeshy/secrets/${NC}"
echo ""
echo -e "${CYAN}2. D√©ploiement complet en une commande:${NC}"
echo -e "   ${GREEN}./scripts/production/deploy-production.sh DROPLET_IP${NC}"
echo ""
echo -e "${CYAN}3. Ou d√©ploiement par √©tapes:${NC}"
echo -e "   ${GREEN}./scripts/deployment/build-and-push-docker-images.sh${NC}"
echo -e "   ${GREEN}./scripts/production/reset-database.sh DROPLET_IP${NC}"
echo -e "   ${GREEN}./scripts/meeshy-deploy.sh deploy DROPLET_IP${NC}"
echo ""

# √âtape 5: V√©rification post-d√©ploiement
log_step "√âtape 5: V√©rification post-d√©ploiement..."

echo -e "${CYAN}Apr√®s le d√©ploiement, v√©rifiez:${NC}"
echo -e "  ‚Ä¢ ${GREEN}./scripts/meeshy-deploy.sh health DROPLET_IP${NC}"
echo -e "  ‚Ä¢ ${GREEN}./scripts/meeshy-deploy.sh logs DROPLET_IP${NC}"
echo ""

# √âtape 6: Acc√®s √† l'application
log_step "√âtape 6: Acc√®s √† l'application..."

echo -e "${CYAN}Une fois d√©ploy√©, l'application sera accessible via:${NC}"
echo -e "  ‚Ä¢ ${GREEN}Frontend:${NC} https://meeshy.me"
echo -e "  ‚Ä¢ ${GREEN}API Gateway:${NC} https://gate.meeshy.me"
echo -e "  ‚Ä¢ ${GREEN}Service ML:${NC} https://ml.meeshy.me"
echo -e "  ‚Ä¢ ${GREEN}Dashboard Traefik:${NC} https://traefik.meeshy.me"
echo -e "  ‚Ä¢ ${GREEN}MongoDB UI:${NC} https://mongo.meeshy.me"
echo -e "  ‚Ä¢ ${GREEN}Redis UI:${NC} https://redis.meeshy.me"
echo ""

# √âtape 7: Avertissements de s√©curit√©
log_step "√âtape 7: Avertissements de s√©curit√©..."

echo -e "${RED}‚ö†Ô∏è  IMPORTANT:${NC}"
echo -e "  ‚Ä¢ ${RED}NE JAMAIS COMMITER le fichier secrets/production-secrets.env${NC}"
echo -e "  ‚Ä¢ ${RED}TOUJOURS cr√©er des backups avant le reset de la base de donn√©es${NC}"
echo -e "  ‚Ä¢ ${RED}TOUJOURS v√©rifier la sant√© des services apr√®s d√©ploiement${NC}"
echo -e "  ‚Ä¢ ${RED}TOUJOURS utiliser des mots de passe forts g√©n√©r√©s automatiquement${NC}"
echo ""

# √âtape 8: Support
log_step "√âtape 8: Support..."

echo -e "${CYAN}En cas de probl√®me:${NC}"
echo -e "  ‚Ä¢ Consultez ${GREEN}scripts/production/README.md${NC}"
echo -e "  ‚Ä¢ Consultez ${GREEN}scripts/production/QUICK_DEPLOYMENT_GUIDE.md${NC}"
echo -e "  ‚Ä¢ V√©rifiez les logs avec ${GREEN}./scripts/meeshy-deploy.sh logs DROPLET_IP${NC}"
echo ""

# R√©sum√© final
echo -e "${GREEN}üéâ Pr√©paration termin√©e !${NC}"
echo -e "${GREEN}üöÄ Vous √™tes pr√™t pour le d√©ploiement en production.${NC}"
echo ""
echo -e "${YELLOW}üí° Conseil:${NC}"
echo -e "  Commencez par tester la connexion SSH vers votre droplet:"
echo -e "  ${GREEN}ssh -o StrictHostKeyChecking=no root@DROPLET_IP 'echo \"Connexion OK\"'${NC}"
echo ""
