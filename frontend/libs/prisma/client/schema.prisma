// ================================================================================================
// CONFIGURATION PRISMA
// ================================================================================================
// Ce schéma définit la structure de données pour une plateforme de messagerie multilingue
// supportant les conversations directes, de groupe, publiques et anonymes via liens de partage.

generator client {
  provider = "prisma-client-js"
  output   = "./prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ================================================================================================
// MODÈLES UTILISATEUR ET AUTHENTIFICATION
// ================================================================================================

/// Représente un utilisateur enregistré de la plateforme
/// Supporte différents rôles et préférences linguistiques avancées
model User {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET AUTHENTIFICATION
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique généré automatiquement (CUID)
  id String @id @default(cuid())

  /// Nom d'utilisateur unique pour la connexion
  username String @unique

  /// Prénom de l'utilisateur
  firstName String

  /// Nom de famille de l'utilisateur
  lastName String

  /// Adresse email unique pour la connexion et notifications
  email String @unique

  /// Numéro de téléphone optionnel (unique si fourni)
  phoneNumber String? @unique

  /// Mot de passe haché pour l'authentification
  password String

  /// Nom d'affichage personnalisé (par défaut: firstName + lastName)
  displayName String?

  /// URL de l'avatar de profil
  avatar String?

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // STATUT ET PRÉSENCE
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Indique si l'utilisateur est actuellement en ligne
  isOnline Boolean @default(false)

  /// Horodatage de la dernière fois que l'utilisateur a été vu en ligne
  lastSeen DateTime @default(now())

  /// Horodatage de la dernière activité de l'utilisateur
  lastActiveAt DateTime @default(now())

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // PRÉFÉRENCES LINGUISTIQUES ET TRADUCTION
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Langue principale du système pour l'interface utilisateur
  systemLanguage String @default("fr")

  /// Langue régionale pour les contenus localisés
  regionalLanguage String @default("fr")

  /// Langue de destination personnalisée pour les traductions
  customDestinationLanguage String?

  /// Active/désactive la traduction automatique des messages reçus
  autoTranslateEnabled Boolean @default(true)

  /// Traduit automatiquement vers la langue système
  translateToSystemLanguage Boolean @default(true)

  /// Traduit automatiquement vers la langue régionale
  translateToRegionalLanguage Boolean @default(false)

  /// Utilise la destination personnalisée pour les traductions
  useCustomDestination Boolean @default(false)

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RÔLES ET PERMISSIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Rôle de l'utilisateur dans le système
  /// USER: Utilisateur standard
  /// ADMIN: Administrateur système
  /// MODO: Modérateur global
  /// AUDIT: Auditeur (lecture seule étendue)
  /// ANALYST: Analyste de données
  /// BIGBOSS: Super administrateur
  role String @default("USER")

  /// Indique si le compte utilisateur est actif
  isActive Boolean @default(true)

  /// Date de désactivation du compte (si applicable)
  deactivatedAt DateTime?

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES TEMPORELLES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Date de création du compte
  createdAt DateTime @default(now())

  /// Date de dernière mise à jour du profil
  updatedAt DateTime @updatedAt

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Messages envoyés par cet utilisateur
  sentMessages Message[] @relation("MessageSender")

  /// Participations aux conversations
  conversations ConversationMember[]

  /// Participations aux groupes (legacy - conservé pour compatibilité)
  groupMemberships GroupMember[]

  /// Groupes créés par cet utilisateur (legacy)
  createdGroups Group[] @relation("GroupCreator")

  /// Groupes où cet utilisateur est administrateur (legacy)
  adminGroups Group[] @relation("GroupAdmins")

  /// Groupes où cet utilisateur est modérateur (legacy)
  moderatorGroups Group[] @relation("GroupModerators")

  /// Demandes d'amitié envoyées
  sentFriendRequests FriendRequest[] @relation("FriendRequestSender")

  /// Demandes d'amitié reçues
  receivedFriendRequests FriendRequest[] @relation("FriendRequestReceiver")

  /// Indicateurs de frappe en cours
  typingIndicators TypingIndicator[]

  /// Statuts de lecture des messages
  messageReadStatus MessageReadStatus[]

  /// Notifications reçues
  notifications Notification[]

  /// Liens de partage créés
  createdShareLinks ConversationShareLink[] @relation("ShareLinkCreator")

  /// Statistiques d'utilisation
  stats UserStats?

  /// Préférences utilisateur générales
  preferences UserPreference[]

  /// Préférences spécifiques aux conversations
  conversationPreferences ConversationPreference[]

  /// Communautés créées par cet utilisateur
  createdCommunities Community[] @relation("CommunityCreator")

  /// Communautés où cet utilisateur est administrateur
  adminCommunities Community[] @relation("CommunityAdmins")

  /// Communautés où cet utilisateur est modérateur
  moderatorCommunities Community[] @relation("CommunityModerators")

  /// Participations aux communautés
  communityMemberships CommunityMember[]

  @@map("users")
}

// ================================================================================================
// MODÈLES DE CONVERSATION ET MESSAGERIE
// ================================================================================================

/// Représente une conversation entre utilisateurs
/// Supporte différents types: directe, groupe, publique, globale
model Conversation {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET CONFIGURATION
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique de la conversation
  id String @id @default(cuid())

  /// Type de conversation
  /// "direct": Conversation privée entre 2 utilisateurs
  /// "group": Conversation de groupe privée (invitation requise)
  /// "public": Groupe public recherchable et rejoignable
  /// "global": Groupe global ouvert à tous
  /// "shared": Conversation accessible via lien de partage
  type String

  /// Titre de la conversation (optionnel pour les conversations directes)
  title String?

  /// Description de la conversation (visible dans les recherches)
  description String?

  /// URL de l'image de couverture de la conversation
  image String?

  /// URL de l'avatar de la conversation
  avatar String?

  /// Référence à la communauté parente (si applicable)
  communityId String?

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // STATUT ET MÉTADONNÉES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Indique si la conversation est active
  isActive Boolean @default(true)

  /// Indique si la conversation est archivée
  isArchived Boolean @default(false)

  /// Horodatage du dernier message envoyé
  lastMessageAt DateTime @default(now())

  /// Date de création de la conversation
  createdAt DateTime @default(now())

  /// Date de dernière modification
  updatedAt DateTime @updatedAt

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Communauté parente (si applicable)
  community Community? @relation(fields: [communityId], references: [id])

  /// Membres de la conversation
  members ConversationMember[]

  /// Messages de la conversation
  messages Message[]

  /// Indicateurs de frappe actifs
  typingIndicators TypingIndicator[]

  /// Liens de partage pour accès anonyme
  shareLinks ConversationShareLink[]

  /// Préférences spécifiques à cette conversation
  preferences ConversationPreference[]

  /// Participants anonymes via liens de partage
  anonymousParticipants AnonymousParticipant[]

  @@map("conversations")
}

/// Représente l'appartenance d'un utilisateur à une conversation
/// Définit les rôles et permissions dans la conversation
model ConversationMember {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET RÉFÉRENCES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique de l'appartenance
  id String @id @default(cuid())

  /// Référence à la conversation
  conversationId String

  /// Référence à l'utilisateur
  userId String

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RÔLE ET PERMISSIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Rôle dans la conversation
  /// "admin": Administrateur (toutes permissions + gestion des membres)
  /// "moderator": Modérateur (permissions étendues de modération)
  /// "member": Membre standard
  /// Note: Les conversations directes n'utilisent que "member"
  role String @default("member")

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // PERMISSIONS DE COMMUNICATION
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Peut envoyer des messages texte
  canSendMessage Boolean @default(true)

  /// Peut envoyer des fichiers
  canSendFiles Boolean @default(true)

  /// Peut envoyer des images
  canSendImages Boolean @default(true)

  /// Peut envoyer des vidéos
  canSendVideos Boolean @default(true)

  /// Peut envoyer des messages vocaux
  canSendAudios Boolean @default(true)

  /// Peut partager sa localisation
  canSendLocations Boolean @default(true)

  /// Peut partager des liens
  canSendLinks Boolean @default(true)

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES TEMPORELLES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Date d'entrée dans la conversation
  joinedAt DateTime @default(now())

  /// Date de sortie de la conversation (si applicable)
  leftAt DateTime?

  /// Indique si l'appartenance est active
  isActive Boolean @default(true)

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Référence à la conversation
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  /// Référence à l'utilisateur
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([conversationId, userId])
  @@map("conversation_members")
}

/// Représente un lien de partage pour accès anonyme à une conversation
/// Permet à des utilisateurs non-enregistrés de participer à une conversation
model ConversationShareLink {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET CONFIGURATION
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique interne
  id String @id @default(cuid())

  /// Identifiant public du lien (utilisé dans l'URL)
  linkId String @unique

  /// Référence à la conversation partagée
  conversationId String

  /// Référence à l'utilisateur créateur du lien
  createdBy String

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES DU LIEN
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Nom descriptif du lien
  name String?

  /// Description du lien et de son usage
  description String?

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // LIMITATIONS ET CONTRÔLES D'ACCÈS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Nombre maximum d'utilisations du lien (null = illimité)
  maxUses Int?

  /// Nombre d'utilisations actuelles du lien
  currentUses Int @default(0)

  /// Nombre maximum de participants simultanés via ce lien (null = illimité)
  maxConcurrentUsers Int?

  /// Nombre de participants actuellement connectés via ce lien
  currentConcurrentUsers Int @default(0)

  /// Date d'expiration du lien (null = permanent)
  expiresAt DateTime?

  /// Indique si le lien est actif
  isActive Boolean @default(true)

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // PERMISSIONS POUR LES UTILISATEURS ANONYMES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Les utilisateurs anonymes peuvent envoyer des messages
  allowAnonymousMessages Boolean @default(true)

  /// Les utilisateurs anonymes peuvent envoyer des fichiers
  allowAnonymousFiles Boolean @default(false)

  /// Les utilisateurs anonymes peuvent envoyer des images
  allowAnonymousImages Boolean @default(true)

  /// Les utilisateurs anonymes peuvent voir l'historique des messages
  allowViewHistory Boolean @default(true)

  /// Requiert un pseudonyme pour participer
  requireNickname Boolean @default(true)

  /// Requiert une adresse email pour participer
  requireEmail Boolean @default(false)

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES TEMPORELLES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Date de création du lien
  createdAt DateTime @default(now())

  /// Date de dernière modification du lien
  updatedAt DateTime @updatedAt

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Référence à la conversation partagée
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  /// Référence à l'utilisateur créateur
  creator User @relation("ShareLinkCreator", fields: [createdBy], references: [id], onDelete: Cascade)

  /// Participants anonymes utilisant ce lien
  anonymousParticipants AnonymousParticipant[] @relation("ShareLinkParticipants")

  @@map("conversation_share_links")
}

/// Représente un participant anonyme à une conversation via un lien de partage
/// Permet de suivre l'identité temporaire et les permissions des utilisateurs non-enregistrés
model AnonymousParticipant {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET RÉFÉRENCES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique du participant anonyme
  id String @id @default(cuid())

  /// Référence à la conversation
  conversationId String

  /// Référence au lien de partage utilisé
  shareLinkId String

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ TEMPORAIRE
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Pseudonyme choisi par l'utilisateur anonyme
  nickname String

  /// Adresse email optionnelle pour contact/notifications
  email String?

  /// Token de session unique pour identifier l'utilisateur anonyme
  sessionToken String @unique

  /// Adresse IP du participant (pour modération)
  ipAddress String?

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // STATUT ET PRÉSENCE
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Indique si le participant est actuellement connecté
  isActive Boolean @default(true)

  /// Indique si le participant est actuellement en ligne
  isOnline Boolean @default(false)

  /// Horodatage de la dernière activité
  lastActiveAt DateTime @default(now())

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // PERMISSIONS HÉRITÉES DU LIEN
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Peut envoyer des messages (hérité du lien de partage)
  canSendMessages Boolean @default(true)

  /// Peut envoyer des fichiers (hérité du lien de partage)
  canSendFiles Boolean @default(false)

  /// Peut envoyer des images (hérité du lien de partage)
  canSendImages Boolean @default(true)

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES TEMPORELLES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Date d'entrée dans la conversation
  joinedAt DateTime @default(now())

  /// Date de dernière activité
  lastSeenAt DateTime @default(now())

  /// Date de sortie de la conversation (si applicable)
  leftAt DateTime?

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Référence à la conversation
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  /// Référence au lien de partage utilisé
  shareLink ConversationShareLink @relation("ShareLinkParticipants", fields: [shareLinkId], references: [id], onDelete: Cascade)

  /// Messages envoyés par ce participant anonyme
  sentMessages Message[] @relation("AnonymousMessageSender")

  @@unique([conversationId, sessionToken])
  @@map("anonymous_participants")
}

// ================================================================================================
// MODÈLES DE MESSAGES ET TRADUCTION
// ================================================================================================

/// Représente un message dans une conversation
/// Supporte différents types de contenu et la traduction automatique
model Message {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET RÉFÉRENCES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique du message
  id String @id @default(cuid())

  /// Référence à la conversation contenant le message
  conversationId String

  /// Référence à l'utilisateur expéditeur (null pour les anonymes)
  senderId String?

  /// Référence au participant anonyme expéditeur (null pour les utilisateurs enregistrés)
  anonymousSenderId String?

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // CONTENU DU MESSAGE
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Contenu textuel du message
  content String

  /// Langue originale du message (détectée automatiquement)
  originalLanguage String @default("fr")

  /// Type de message
  /// "text": Message textuel standard
  /// "image": Message contenant une image
  /// "file": Message contenant un fichier
  /// "audio": Message vocal
  /// "video": Message vidéo
  /// "location": Partage de localisation
  /// "system": Message généré par le système
  messageType String @default("text")

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES DE MESSAGE
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Indique si le message a été modifié
  isEdited Boolean @default(false)

  /// Date de dernière modification (si applicable)
  editedAt DateTime?

  /// Indique si le message a été supprimé
  isDeleted Boolean @default(false)

  /// Date de suppression (si applicable)
  deletedAt DateTime?

  /// Référence au message parent (pour les réponses)
  replyToId String?

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES TEMPORELLES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Date de création du message
  createdAt DateTime @default(now())

  /// Date de dernière modification
  updatedAt DateTime @updatedAt

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Référence à la conversation
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  /// Référence à l'expéditeur enregistré (si applicable)
  sender User? @relation("MessageSender", fields: [senderId], references: [id], onDelete: Cascade)

  /// Référence à l'expéditeur anonyme (si applicable)
  anonymousSender AnonymousParticipant? @relation("AnonymousMessageSender", fields: [anonymousSenderId], references: [id], onDelete: Cascade)

  /// Référence au message parent (pour les réponses)
  replyTo Message? @relation("MessageReplies", fields: [replyToId], references: [id])

  /// Messages en réponse à ce message
  replies Message[] @relation("MessageReplies")

  /// Traductions disponibles de ce message
  translations MessageTranslation[]

  /// Statuts de lecture par les utilisateurs
  readStatus MessageReadStatus[]

  @@map("messages")
}

/// Représente une traduction d'un message dans une langue spécifique
/// Utilise un système de cache pour optimiser les performances
model MessageTranslation {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET RÉFÉRENCES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique de la traduction
  id String @id @default(cuid())

  /// Référence au message original
  messageId String

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // INFORMATIONS DE TRADUCTION
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Langue source du message original
  sourceLanguage String

  /// Langue cible de la traduction
  targetLanguage String

  /// Contenu traduit
  translatedContent String

  /// Modèle de traduction utilisé (ex: "t5-base", "nllb-200", "gpt-4")
  translationModel String

  /// Clé de cache unique pour éviter les traductions en double
  cacheKey String @unique

  /// Score de confiance de la traduction (0.0 à 1.0)
  confidenceScore Float?

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES TEMPORELLES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Date de création de la traduction
  createdAt DateTime @default(now())

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Référence au message original
  message Message @relation(fields: [messageId], references: [id], onDelete: Cascade)

  @@unique([messageId, targetLanguage])
  @@map("message_translations")
}

/// Représente le statut de lecture d'un message par un utilisateur
/// Permet de suivre qui a lu quoi et quand
model MessageReadStatus {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET RÉFÉRENCES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique du statut de lecture
  id String @id @default(cuid())

  /// Référence au message lu
  messageId String

  /// Référence à l'utilisateur ayant lu le message
  userId String

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // INFORMATIONS DE LECTURE
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Horodatage de la lecture du message
  readAt DateTime @default(now())

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Référence au message lu
  message Message @relation(fields: [messageId], references: [id], onDelete: Cascade)

  /// Référence à l'utilisateur
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([messageId, userId])
  @@map("message_read_status")
}

// ================================================================================================
// MODÈLES SOCIAUX ET RELATIONS
// ================================================================================================

/// Représente une demande d'amitié entre deux utilisateurs
/// Gère le processus d'établissement de relations sociales
model FriendRequest {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET RÉFÉRENCES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique de la demande d'amitié
  id String @id @default(cuid())

  /// Référence à l'utilisateur envoyant la demande
  senderId String

  /// Référence à l'utilisateur recevant la demande
  receiverId String

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // STATUT DE LA DEMANDE
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Statut de la demande d'amitié
  /// "pending": En attente de réponse
  /// "accepted": Acceptée (amis)
  /// "rejected": Rejetée
  /// "blocked": Bloquée (utilisateur bloqué)
  status String @default("pending")

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES TEMPORELLES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Date d'envoi de la demande
  createdAt DateTime @default(now())

  /// Date de dernière modification du statut
  updatedAt DateTime @updatedAt

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Référence à l'expéditeur
  sender User @relation("FriendRequestSender", fields: [senderId], references: [id], onDelete: Cascade)

  /// Référence au destinataire
  receiver User @relation("FriendRequestReceiver", fields: [receiverId], references: [id], onDelete: Cascade)

  @@unique([senderId, receiverId])
  @@map("friend_requests")
}

// ================================================================================================
// MODÈLES D'INDICATION D'ACTIVITÉ
// ================================================================================================

/// Représente l'indicateur de frappe d'un utilisateur dans une conversation
/// Permet d'afficher en temps réel qui est en train d'écrire
model TypingIndicator {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET RÉFÉRENCES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique de l'indicateur de frappe
  id String @id @default(cuid())

  /// Référence à la conversation
  conversationId String

  /// Référence à l'utilisateur qui tape
  userId String

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // ÉTAT DE LA FRAPPE
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Indique si l'utilisateur est actuellement en train de taper
  isTyping Boolean @default(true)

  /// Horodatage du début de la frappe
  startedAt DateTime @default(now())

  /// Horodatage de la dernière mise à jour
  updatedAt DateTime @updatedAt

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Référence à la conversation
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  /// Référence à l'utilisateur
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([conversationId, userId])
  @@map("typing_indicators")
}

// ================================================================================================
// MODÈLES DE NOTIFICATION
// ================================================================================================

/// Représente une notification pour un utilisateur
/// Gère tous les types d'alertes et messages système
model Notification {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET RÉFÉRENCES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique de la notification
  id String @id @default(cuid())

  /// Référence à l'utilisateur destinataire
  userId String

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // CONTENU DE LA NOTIFICATION
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Type de notification
  /// "new_conversation": Nouvelle conversation créée
  /// "new_message": Nouveau message reçu
  /// "message_edited": Message modifié
  /// "message_deleted": Message supprimé
  /// "friend_request": Demande d'amitié reçue
  /// "friend_accepted": Demande d'amitié acceptée
  /// "community_invite": Invitation à une communauté
  /// "conversation_invite": Invitation à une conversation
  /// "share_link_used": Lien de partage utilisé
  /// "anonymous_joined": Participant anonyme rejoint
  /// "system_announcement": Annonce système
  type String

  /// Titre de la notification
  title String

  /// Contenu détaillé de la notification
  content String

  /// Données additionnelles en JSON (références, métadonnées)
  data String?

  /// Priorité de la notification (low, normal, high, urgent)
  priority String @default("normal")

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // ÉTAT DE LA NOTIFICATION
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Indique si la notification a été lue
  isRead Boolean @default(false)

  /// Indique si la notification a été envoyée par email
  emailSent Boolean @default(false)

  /// Indique si la notification push a été envoyée
  pushSent Boolean @default(false)

  /// Date d'expiration de la notification (auto-suppression)
  expiresAt DateTime?

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES TEMPORELLES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Date de création de la notification
  createdAt DateTime @default(now())

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Référence à l'utilisateur destinataire
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("notifications")
}

// ================================================================================================
// MODÈLES DE COMMUNAUTÉ (Legacy - conservé pour compatibilité)
// ================================================================================================

/// Représente une communauté d'utilisateurs
/// Peut contenir plusieurs conversations et gérer des membres
model Community {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET CONFIGURATION
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique de la communauté
  id String @id @default(cuid())

  /// Titre de la communauté
  title String

  /// Description de la communauté
  description String?

  /// URL de l'image de la communauté
  image String?

  /// Indique si la communauté est publique (découvrable)
  isPublic Boolean @default(false)

  /// Nombre maximum de membres (null = illimité)
  maxMembers Int?

  /// Référence au créateur de la communauté
  createdById String

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES TEMPORELLES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Date de création de la communauté
  createdAt DateTime @default(now())

  /// Date de dernière modification
  updatedAt DateTime @updatedAt

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Conversations appartenant à cette communauté
  conversations Conversation[]

  /// Référence au créateur
  createdBy User @relation("CommunityCreator", fields: [createdById], references: [id])

  /// Membres de la communauté
  members CommunityMember[]

  /// Administrateurs de la communauté
  admins User[] @relation("CommunityAdmins")

  /// Modérateurs de la communauté
  moderators User[] @relation("CommunityModerators")

  @@map("communities")
}

/// Représente l'appartenance d'un utilisateur à une communauté
model CommunityMember {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET RÉFÉRENCES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique de l'appartenance
  id String @id @default(cuid())

  /// Référence à la communauté
  communityId String

  /// Référence à l'utilisateur
  userId String

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RÔLE ET PERMISSIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Rôle dans la communauté
  /// "member": Membre standard
  /// "admin": Administrateur
  /// "moderator": Modérateur
  role String @default("member")

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES TEMPORELLES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Date d'entrée dans la communauté
  joinedAt DateTime @default(now())

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Référence à la communauté
  community Community @relation(fields: [communityId], references: [id], onDelete: Cascade)

  /// Référence à l'utilisateur
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([communityId, userId])
  @@map("community_members")
}

// ================================================================================================
// MODÈLES LEGACY (Groupes - conservés pour compatibilité)
// ================================================================================================

/// Modèle legacy pour les groupes - remplacé par le système de conversations
/// Conservé pour la compatibilité avec les données existantes
model Group {
  /// Identifiant unique du groupe
  id String @id @default(cuid())

  /// Nom du groupe
  name String

  /// Description du groupe
  description String?

  /// URL de l'avatar du groupe
  avatar String?

  /// Indique si le groupe est privé
  isPrivate Boolean @default(true)

  /// Référence au créateur du groupe
  createdBy String

  /// Date de création
  createdAt DateTime @default(now())

  /// Date de modification
  updatedAt DateTime @updatedAt

  // Relations legacy
  creator    User          @relation("GroupCreator", fields: [createdBy], references: [id])
  members    GroupMember[]
  admins     User[]        @relation("GroupAdmins")
  moderators User[]        @relation("GroupModerators")

  @@map("groups")
}

/// Appartenance legacy aux groupes
model GroupMember {
  /// Identifiant unique
  id String @id @default(cuid())

  /// Référence au groupe
  groupId String

  /// Référence à l'utilisateur
  userId String

  /// Date d'entrée
  joinedAt DateTime @default(now())

  // Relations
  group Group @relation(fields: [groupId], references: [id], onDelete: Cascade)
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([groupId, userId])
  @@map("group_members")
}

// ================================================================================================
// MODÈLES DE STATISTIQUES ET PRÉFÉRENCES
// ================================================================================================

/// Représente les statistiques d'utilisation d'un utilisateur
/// Utilisé pour l'analyse et les métriques de performance
model UserStats {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET RÉFÉRENCE
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique des statistiques
  id String @id @default(cuid())

  /// Référence à l'utilisateur (unique)
  userId String @unique

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // STATISTIQUES DE MESSAGERIE
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Nombre total de messages envoyés
  messagesSent Int @default(0)

  /// Nombre total de messages reçus
  messagesReceived Int @default(0)

  /// Nombre total de caractères tapés
  charactersTyped Int @default(0)

  /// Nombre de messages avec images envoyés
  imageMessagesSent Int @default(0)

  /// Nombre de fichiers partagés
  filesShared Int @default(0)

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // STATISTIQUES SOCIALES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Nombre de conversations rejointes
  conversationsJoined Int @default(0)

  /// Nombre de groupes créés
  groupsCreated Int @default(0)

  /// Nombre d'amis ajoutés
  friendsAdded Int @default(0)

  /// Nombre de demandes d'amitié envoyées
  friendRequestsSent Int @default(0)

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // STATISTIQUES DE TRADUCTION
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Nombre de traductions utilisées
  translationsUsed Int @default(0)

  /// Nombre de langues différentes détectées dans les messages
  languagesDetected Int @default(0)

  /// Temps total passé avec la traduction automatique activée (en minutes)
  autoTranslateTimeMinutes Int @default(0)

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // STATISTIQUES DE TEMPS ET ACTIVITÉ
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Temps total passé en ligne (en minutes)
  totalOnlineTimeMinutes Int @default(0)

  /// Nombre de sessions de connexion
  sessionCount Int @default(0)

  /// Horodatage de la dernière activité enregistrée
  lastActiveAt DateTime @default(now())

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES TEMPORELLES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Date de création des statistiques
  createdAt DateTime @default(now())

  /// Date de dernière mise à jour
  updatedAt DateTime @updatedAt

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Référence à l'utilisateur
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_stats")
}

/// Représente une préférence utilisateur générale
/// Système flexible de clé-valeur pour les paramètres personnalisés
model UserPreference {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET RÉFÉRENCES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique de la préférence
  id String @id @default(cuid())

  /// Référence à l'utilisateur
  userId String

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // DONNÉES DE PRÉFÉRENCE
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Clé de la préférence (ex: "theme", "notifications_email", "language_preference")
  key String

  /// Valeur de la préférence (JSON pour les objets complexes)
  value String

  /// Type de la préférence pour validation
  /// "string", "boolean", "number", "json", "array"
  valueType String @default("string")

  /// Description de la préférence (pour documentation)
  description String?

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES TEMPORELLES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Date de création de la préférence
  createdAt DateTime @default(now())

  /// Date de dernière modification
  updatedAt DateTime @updatedAt

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Référence à l'utilisateur
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, key])
  @@map("user_preferences")
}

/// Représente une préférence spécifique à une conversation
/// Permet de personnaliser l'expérience par conversation
model ConversationPreference {
  // ──────────────────────────────────────────────────────────────────────────────────────────
  // IDENTITÉ ET RÉFÉRENCES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Identifiant unique de la préférence
  id String @id @default(cuid())

  /// Référence à la conversation
  conversationId String

  /// Référence à l'utilisateur
  userId String

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // DONNÉES DE PRÉFÉRENCE
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Clé de la préférence (ex: "notifications", "auto_translate_target", "message_preview")
  key String

  /// Valeur de la préférence
  value String

  /// Type de la préférence
  valueType String @default("string")

  /// Description de la préférence
  description String?

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // MÉTADONNÉES TEMPORELLES
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Date de création
  createdAt DateTime @default(now())

  /// Date de modification
  updatedAt DateTime @updatedAt

  // ──────────────────────────────────────────────────────────────────────────────────────────
  // RELATIONS
  // ──────────────────────────────────────────────────────────────────────────────────────────

  /// Référence à la conversation
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  /// Référence à l'utilisateur
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([conversationId, userId, key])
  @@map("conversation_preferences")
}

// ================================================================================================
// INDEX ET OPTIMISATIONS
// ================================================================================================

// Les index suivants sont créés automatiquement par Prisma pour les relations,
// mais vous pouvez ajouter des index personnalisés ici pour optimiser les performances:

// @@index([createdAt]) sur les modèles fréquemment triés par date
// @@index([isActive]) sur les modèles avec statut actif/inactif
// @@index([lastActiveAt]) pour les requêtes de présence
// @@index([originalLanguage]) sur les messages pour les statistiques linguistiques
