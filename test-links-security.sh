#!/bin/bash

# Script de test pour les am√©liorations du syst√®me /links

API_BASE="http://localhost:3000"
HEADERS_CONTENT="Content-Type: application/json"

echo "üß™ Test des am√©liorations du syst√®me /links"
echo "=============================================="

# Test 1: V√©rifier la sant√© du serveur
echo ""
echo "1Ô∏è‚É£ Test de sant√© du serveur..."
curl -s "$API_BASE/health" | jq '.'

# Test 2: Essayer de cr√©er un lien sans authentification (doit √©chouer)
echo ""
echo "2Ô∏è‚É£ Test cr√©ation de lien sans authentification (doit √©chouer)..."
curl -s -X POST "$API_BASE/links" \
  -H "$HEADERS_CONTENT" \
  -d '{
    "name": "Test Link",
    "description": "Test de cr√©ation de lien sans auth"
  }' | jq '.'

# Test 3: Test avec un faux Bearer token (doit √©chouer)
echo ""
echo "3Ô∏è‚É£ Test cr√©ation de lien avec token invalide (doit √©chouer)..."
curl -s -X POST "$API_BASE/links" \
  -H "$HEADERS_CONTENT" \
  -H "Authorization: Bearer fake-token-12345" \
  -d '{
    "name": "Test Link",
    "description": "Test de cr√©ation de lien avec faux token"
  }' | jq '.'

# Test 4: Test du middleware hybride - r√©cup√©ration de lien sans auth (doit √©chouer)
echo ""
echo "4Ô∏è‚É£ Test r√©cup√©ration de lien sans authentification (doit √©chouer)..."
curl -s "$API_BASE/links/test-link-id" | jq '.'

# Test 5: Test du middleware hybride avec session token invalide
echo ""
echo "5Ô∏è‚É£ Test r√©cup√©ration de lien avec session token invalide (doit √©chouer)..."
curl -s "$API_BASE/links/test-link-id" \
  -H "x-session-token: fake-session-token" | jq '.'

# Test 6: Test d'envoi de message sans session token (doit √©chouer)
echo ""
echo "6Ô∏è‚É£ Test envoi de message sans session token (doit √©chouer)..."
curl -s -X POST "$API_BASE/links/test-link-id/messages" \
  -H "$HEADERS_CONTENT" \
  -d '{
    "content": "Test message",
    "originalLanguage": "fr"
  }' | jq '.'

# Test 7: Test de mise √† jour de lien sans authentification (doit √©chouer)
echo ""
echo "7Ô∏è‚É£ Test mise √† jour de lien sans authentification (doit √©chouer)..."
curl -s -X PUT "$API_BASE/links/test-link-id" \
  -H "$HEADERS_CONTENT" \
  -d '{
    "name": "Updated Link Name"
  }' | jq '.'

echo ""
echo "üéØ Tests de s√©curit√© termin√©s !"
echo "‚úÖ Tous les tests ci-dessus doivent retourner des erreurs 401/403"
echo "   car ils testent les middlewares de s√©curit√© sans authentification valide"
echo ""
echo "üìã R√©sum√© des am√©liorations test√©es:"
echo "   - ‚úÖ Middleware d'authentification hybride"
echo "   - ‚úÖ Protection POST /links (accessToken requis)"
echo "   - ‚úÖ Protection GET /links/:id (hybride: accessToken OU sessionToken)"
echo "   - ‚úÖ Protection POST /links/:id/messages (sessionToken requis)"
echo "   - ‚úÖ Protection PUT /links/:id (accessToken requis)"
echo ""
echo "üîó Pour tester avec de vrais tokens, utilisez d'abord:"
echo "   POST /auth/login pour obtenir un accessToken"
echo "   POST /anonymous/join/:linkId pour obtenir un sessionToken"
