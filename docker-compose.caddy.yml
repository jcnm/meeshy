services:
  # Caddy Reverse Proxy with automatic SSL
  caddy:
    image: caddy:2-alpine
    container_name: meeshy-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - meeshy-network
    depends_on:
      - frontend
      - gateway

  # Database Service
  database:
    image: ${DATABASE_IMAGE:-mongo:8.0}
    container_name: meeshy-database
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE:-meeshy}
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER:-meeshy}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-MeeshyPassword123}
      POSTGRES_DB: ${POSTGRESQL_DATABASE:-meeshy}
      POSTGRES_USER: ${POSTGRESQL_USER:-meeshy}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD:-MeeshyPassword123}
    volumes:
      - database_data:/data/db
      - database_config:/data/configdb
      - ./shared/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh:ro
      - ./shared/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./shared/init-postgresql.sql:/docker-entrypoint-initdb.d/init-postgresql.sql:ro
    networks:
      - meeshy-network
    healthcheck:
      test: ["CMD-SHELL", "echo 'Database health check' && exit 0"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:8-alpine
    container_name: meeshy-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - meeshy-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Translator Service
  translator:
    image: ${TRANSLATOR_IMAGE:-isopen/meeshy-translator:1.0.37-alpha}
    container_name: meeshy-translator
    restart: unless-stopped
    environment:
      - DATABASE_TYPE=${DATABASE_TYPE:-MONGODB}
      - DATABASE_URL=${DATABASE_URL}
      - PRISMA_SCHEMA_PATH=${PRISMA_SCHEMA_PATH}
      - PYTHONPATH=/workspace:/workspace/generated
      - PYTHONUNBUFFERED=1
      - NODE_ENV=production
    volumes:
      - models_data:/workspace/models
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - meeshy-network
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Gateway Service
  gateway:
    image: ${GATEWAY_IMAGE:-isopen/meeshy-gateway:1.0.37-alpha}
    container_name: meeshy-gateway
    restart: unless-stopped
    environment:
      - DATABASE_TYPE=${DATABASE_TYPE:-MONGODB}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - TRANSLATOR_URL=http://translator:8000
      - ZMQ_PUSH_URL=tcp://translator:5555
      - ZMQ_SUB_URL=tcp://translator:5558
      - NODE_ENV=production
      - CORS_ORIGINS=${CORS_ORIGINS}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - FRONTEND_URL=${FRONTEND_URL}
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      translator:
        condition: service_healthy
    networks:
      - meeshy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend Service
  frontend:
    image: ${FRONTEND_IMAGE:-isopen/meeshy-frontend:1.0.37-alpha}
    container_name: meeshy-frontend
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=https://${DOMAIN:-localhost}/api
      - NEXT_PUBLIC_WS_URL=wss://${DOMAIN:-localhost}/ws
      - NEXT_PUBLIC_TRANSLATION_URL=https://${DOMAIN:-localhost}/translate
      - NEXT_PUBLIC_BACKEND_URL=https://${DOMAIN:-localhost}/api
      - NEXT_PUBLIC_FRONTEND_URL=https://${DOMAIN:-localhost}
      - NEXT_PUBLIC_DISABLE_CLIENT_TRANSLATION=${NEXT_PUBLIC_DISABLE_CLIENT_TRANSLATION:-true}
      - NEXT_PUBLIC_USE_API_TRANSLATION_ONLY=${NEXT_PUBLIC_USE_API_TRANSLATION_ONLY:-true}
      - NEXT_PUBLIC_DEBUG_LOGS=${NEXT_PUBLIC_DEBUG_LOGS:-false}
      - NODE_ENV=production
    depends_on:
      gateway:
        condition: service_healthy
    networks:
      - meeshy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  database_data:
  database_config:
  redis_data:
  caddy_data:
  caddy_config:
  models_data:

networks:
  meeshy-network:
    driver: bridge
