#!/bin/bash

# Script de mise √† jour automatique pour Meeshy
# T√©l√©charge les derni√®res images et red√©marre les services

set -e

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${BLUE}‚ïë        MEESHY - Mise √† Jour Automatique                 ‚ïë${NC}"
echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""

# Fonction pour afficher les messages
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rifier que Docker est en cours d'ex√©cution
if ! docker info > /dev/null 2>&1; then
    log_error "Docker n'est pas en cours d'ex√©cution"
    exit 1
fi

# Demander confirmation
echo -e "${YELLOW}Cette op√©ration va:${NC}"
echo "  1. T√©l√©charger les derni√®res images Docker"
echo "  2. Arr√™ter les services actuels"
echo "  3. Red√©marrer avec les nouvelles images"
echo ""
read -p "Voulez-vous continuer ? (oui/non): " confirm

if [ "$confirm" != "oui" ]; then
    log_warning "Mise √† jour annul√©e"
    exit 0
fi

echo ""
log_info "üöÄ D√©marrage de la mise √† jour..."
echo ""

# √âtape 1: T√©l√©charger les derni√®res images
log_info "üì• T√©l√©chargement des derni√®res images Docker..."
docker-compose -f docker-compose.dev.yml pull

if [ $? -eq 0 ]; then
    log_success "Images t√©l√©charg√©es avec succ√®s"
else
    log_error "√âchec du t√©l√©chargement des images"
    exit 1
fi

echo ""

# √âtape 2: Arr√™ter les services
log_info "‚èπÔ∏è  Arr√™t des services actuels..."
docker-compose -f docker-compose.dev.yml down

if [ $? -eq 0 ]; then
    log_success "Services arr√™t√©s"
else
    log_error "√âchec de l'arr√™t des services"
    exit 1
fi

echo ""

# √âtape 3: Red√©marrer avec les nouvelles images
log_info "üîÑ Red√©marrage des services avec les nouvelles images..."
docker-compose -f docker-compose.dev.yml --env-file .env.dev up -d

if [ $? -eq 0 ]; then
    log_success "Services red√©marr√©s avec succ√®s"
else
    log_error "√âchec du red√©marrage des services"
    exit 1
fi

echo ""
log_info "‚è≥ Attente de la stabilisation des services (30 secondes)..."
sleep 30

echo ""
log_info "üè• V√©rification de la sant√© des services..."
echo ""

# V√©rifier les services
./health-check.sh

if [ $? -eq 0 ]; then
    echo ""
    log_success "‚ú® Mise √† jour termin√©e avec succ√®s!"
    echo ""
    log_info "üìã R√©sum√© de la mise √† jour:"
    echo "   - Nouvelles images t√©l√©charg√©es et d√©ploy√©es"
    echo "   - Tous les services sont op√©rationnels"
    echo ""
    log_info "üìç URLs d'acc√®s:"
    echo "   - Frontend:        ${GREEN}http://localhost:3100${NC}"
    echo "   - Gateway API:     ${GREEN}http://localhost:3000${NC}"
    echo "   - Translator API:  ${GREEN}http://localhost:8000${NC}"
    echo ""
else
    log_warning "‚ö†Ô∏è  Certains services ont des probl√®mes apr√®s la mise √† jour"
    echo ""
    log_info "üí° Actions recommand√©es:"
    echo "   1. V√©rifier les logs: ./start-dev.sh logs"
    echo "   2. Red√©marrer les services: ./start-dev.sh restart"
    echo ""
fi
