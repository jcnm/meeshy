# Dockerfile pour développement optimisé
FROM node:18-alpine

# Installer pnpm et les outils nécessaires
RUN npm install -g pnpm@latest && \
    apk add --no-cache bash curl tini && \
    npm cache clean --force

# Créer le répertoire de l'application
WORKDIR /app

# Copier les fichiers de package pour optimiser le cache
COPY package*.json pnpm-lock.yaml* ./
COPY tsconfig.json ./

# Installer toutes les dépendances (dev et prod) avec pnpm
RUN pnpm install --frozen-lockfile

# Copier le code source
COPY . .

# Créer les répertoires nécessaires
RUN mkdir -p logs

# Exposer le port
EXPOSE 3001

# Health check optimisé
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:3001/health || exit 1

# Variables d'environnement pour le développement
ENV NODE_ENV=development \
    NODE_OPTIONS="--enable-source-maps"

# Utiliser tini pour une meilleure gestion des processus
ENTRYPOINT ["tini", "--"]

# Commande de démarrage en mode développement avec pnpm
CMD ["pnpm", "run", "dev"]
