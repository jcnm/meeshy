services:
  # Base de données externe pour le développement
  postgres:
    image: postgres:15-alpine
    container_name: meeshy-postgres-dev
    environment:
      POSTGRES_DB: meeshy
      POSTGRES_USER: meeshy
      POSTGRES_PASSWORD: MeeshyP@ssword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U meeshy -d meeshy"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - meeshy-dev-network

  redis:
    image: redis:7-alpine
    container_name: meeshy-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - meeshy-dev-network

  # Service de développement Meeshy
  meeshy-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        NODE_VERSION: 22
        PNPM_VERSION: 8.15.0
    container_name: meeshy-dev
    ports:
      - "3100:3100"  # Frontend
      - "3000:3000"  # Gateway
      - "8000:8000"  # Translator
    environment:
      - NODE_ENV=development
      - USE_EXTERNAL_DB=true
      - START_POSTGRES=false
      - START_REDIS=false
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql://meeshy:MeeshyP@ssword@postgres:5432/meeshy
      - REDIS_URL=redis://redis:6379
      - ZMQ_TRANSLATOR_HOST=localhost
      - ZMQ_TRANSLATOR_PUSH_PORT=5555
      - ZMQ_TRANSLATOR_SUB_PORT=5558
      - GRPC_HOST=localhost
      - GRPC_PORT=50051
    env_file:
      - env.docker
    volumes:
      # Monter le code source pour le hot reload
      - ./frontend:/app/frontend
      - ./gateway:/app/gateway
      - ./translator:/app/translator
      - ./shared:/app/shared
      - ./scripts:/app/scripts
      - ./docker:/app/docker
      # Exclure node_modules pour éviter les conflits
      - /app/frontend/node_modules
      - /app/gateway/node_modules
      - /app/shared/node_modules
      # Monter les logs et données
      - ./logs:/app/logs
      - ./data:/app/data
      # Cache pour les modèles et dépendances
      - meeshy_cache:/app/cache
      - meeshy_models:/app/models
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - meeshy-dev-network
    restart: unless-stopped
    command: ["/app/scripts/start-dev.sh"]

volumes:
  postgres_data:
  redis_data:
  meeshy_cache:
  meeshy_models:

networks:
  meeshy-dev-network:
    driver: bridge
