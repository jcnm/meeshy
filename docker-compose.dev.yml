
# Docker Compose pour l'environnement de DÉVELOPPEMENT LOCAL
# Ce fichier démarre uniquement l'infrastructure (MongoDB, Redis)
# Les services applicatifs (Gateway, Translator, Frontend) sont démarrés en natif

services:
  # Base de données MongoDB
  database:
    image: mongo:8.0
    container_name: meeshy-dev-database
    restart: unless-stopped
    command: mongod --bind_ip_all --replSet rs0 --keyFile /data/configdb/mongodb-keyfile
    environment:
      MONGO_INITDB_ROOT_USERNAME: meeshy
      MONGO_INITDB_ROOT_PASSWORD: MeeshyPassword123
      MONGO_INITDB_DATABASE: meeshy
      MONGO_REPLICA_SET: rs0
    ports:
      - "27017:27017"
    volumes:
      - dev_database_data:/data/db
      - dev_database_config:/data/configdb
      - ./shared/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./shared/mongodb-keyfile:/data/configdb/mongodb-keyfile
    networks:
      - meeshy-dev-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Cache Redis  
  redis:
    image: redis:7.2-alpine
    container_name: meeshy-dev-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - dev_redis_data:/data
    networks:
      - meeshy-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  meeshy-dev-network:
    driver: bridge
    name: meeshy-dev-network

volumes:
  dev_database_data:
    name: meeshy-dev-database-data
  dev_database_config:
    name: meeshy-dev-database-config
  dev_redis_data:
    name: meeshy-dev-redis-data
