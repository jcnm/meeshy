#!/bin/bash

# Script de d√©marrage pour l'environnement de d√©veloppement local Meeshy
# Ex√©cute les services en mode natif (translator, gateway, frontend)

set -e

# Couleurs pour les logs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# PIDs des processus
TRANSLATOR_PID=""
GATEWAY_PID=""
FRONTEND_PID=""

# Fonction pour afficher les messages
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Fonction pour arr√™ter tous les processus
cleanup() {
    log_warning "Arr√™t des services..."
    
    if [ ! -z "$FRONTEND_PID" ]; then
        log_info "Arr√™t du frontend (PID: $FRONTEND_PID)..."
        kill $FRONTEND_PID 2>/dev/null || true
    fi
    
    if [ ! -z "$GATEWAY_PID" ]; then
        log_info "Arr√™t du gateway (PID: $GATEWAY_PID)..."
        kill $GATEWAY_PID 2>/dev/null || true
    fi
    
    if [ ! -z "$TRANSLATOR_PID" ]; then
        log_info "Arr√™t du translator (PID: $TRANSLATOR_PID)..."
        kill $TRANSLATOR_PID 2>/dev/null || true
    fi
    
    log_success "Tous les services ont √©t√© arr√™t√©s"
    exit 0
}

# Capturer Ctrl+C pour arr√™ter proprement
trap cleanup SIGINT SIGTERM

# Capturer Ctrl+C pour arr√™ter proprement
trap cleanup SIGINT SIGTERM

# V√©rifier les scripts de d√©marrage
check_scripts() {
    log_info "V√©rification des scripts de d√©marrage..."
    
    if [ ! -f "translator/translator.sh" ]; then
        log_error "Script translator/translator.sh non trouv√©"
        exit 1
    fi
    
    if [ ! -f "gateway/gateway.sh" ]; then
        log_error "Script gateway/gateway.sh non trouv√©"
        exit 1
    fi
    
    if [ ! -f "frontend/frontend.sh" ]; then
        log_error "Script frontend/frontend.sh non trouv√©"
        exit 1
    fi
    
    # Rendre les scripts ex√©cutables
    chmod +x translator/translator.sh gateway/gateway.sh frontend/frontend.sh
    
    log_success "Tous les scripts sont pr√™ts"
}

# D√©marrer les services
start_services() {
    log_info "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    log_info "‚ïë     MEESHY - D√©marrage en Mode Natif (Development)       ‚ïë"
    log_info "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo ""
    
    # 1. D√©marrer le Translator
    log_info "üöÄ D√©marrage du service Translator..."
    cd translator
    ./translator.sh > ../logs/translator.log 2>&1 &
    TRANSLATOR_PID=$!
    cd ..
    log_success "Translator d√©marr√© (PID: $TRANSLATOR_PID)"
    
    # Attendre que le translator soit pr√™t
    log_info "Attente du d√©marrage du translator..."
    sleep 5
    
    # 2. D√©marrer le Gateway
    log_info "üöÄ D√©marrage du service Gateway..."
    cd gateway
    ./gateway.sh > ../logs/gateway.log 2>&1 &
    GATEWAY_PID=$!
    cd ..
    log_success "Gateway d√©marr√© (PID: $GATEWAY_PID)"
    
    # Attendre que le gateway soit pr√™t
    log_info "Attente du d√©marrage du gateway..."
    sleep 3
    
    # 3. D√©marrer le Frontend
    log_info "üöÄ D√©marrage du service Frontend..."
    cd frontend
    ./frontend.sh > ../logs/frontend.log 2>&1 &
    FRONTEND_PID=$!
    cd ..
    log_success "Frontend d√©marr√© (PID: $FRONTEND_PID)"
    
    echo ""
    log_success "‚ú® Tous les services ont d√©marr√© avec succ√®s!"
    echo ""
    log_info "üìç URLs d'acc√®s:"
    echo "   - Frontend:        ${GREEN}http://localhost:3100${NC}"
    echo "   - Gateway API:     ${GREEN}http://localhost:3000${NC}"
    echo "   - Translator API:  ${GREEN}http://localhost:8000${NC}"
    echo ""
    log_info "üìã PIDs des processus:"
    echo "   - Translator:  ${YELLOW}$TRANSLATOR_PID${NC}"
    echo "   - Gateway:     ${YELLOW}$GATEWAY_PID${NC}"
    echo "   - Frontend:    ${YELLOW}$FRONTEND_PID${NC}"
    echo ""
    log_info "üìù Logs disponibles dans:"
    echo "   - logs/translator.log"
    echo "   - logs/gateway.log"
    echo "   - logs/frontend.log"
    echo ""
    log_info "üí° Appuyez sur ${YELLOW}Ctrl+C${NC} pour arr√™ter tous les services"
    echo ""
    
    # Attendre ind√©finiment (jusqu'√† Ctrl+C)
    wait
}

# Cr√©er le r√©pertoire logs si n√©cessaire
mkdir -p logs

# V√©rifier les scripts
check_scripts

# D√©marrer les services
start_services
