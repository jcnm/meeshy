#!/bin/bash
set -e

echo "[TEST] üß™ Test des corrections Prisma..."

# Variables d'environnement de test
export DATABASE_URL="postgresql://meeshy:MeeshyP@ssword@localhost:5432/meeshy"

# Fonction pour nettoyer apr√®s les tests
cleanup() {
    echo "[TEST] üßπ Nettoyage apr√®s les tests..."
    # Arr√™ter les conteneurs de test si n√©cessaire
    docker-compose down 2>/dev/null || true
}

# Fonction pour tester la g√©n√©ration du client Prisma
test_prisma_generation() {
    echo "[TEST] üîß Test de la g√©n√©ration du client Prisma..."
    
    # V√©rifier que le sch√©ma Prisma existe
    if [ ! -f "./shared/prisma/schema.prisma" ]; then
        echo "[TEST] ‚ùå Sch√©ma Prisma non trouv√©"
        return 1
    fi
    
    echo "[TEST] ‚úÖ Sch√©ma Prisma trouv√©"
    
    # Cr√©er le r√©pertoire generated
    mkdir -p /tmp/test-generated
    
    # Tester la g√©n√©ration du client Prisma
    echo "[TEST] üì¶ Test de g√©n√©ration du client Prisma..."
    if prisma generate --schema=./shared/prisma/schema.prisma; then
        echo "[TEST] ‚úÖ G√©n√©ration du client Prisma r√©ussie"
    else
        echo "[TEST] ‚ö†Ô∏è √âchec de la g√©n√©ration du client Prisma (normal si prisma-client-py non install√©)"
    fi
    
    echo "[TEST] ‚úÖ Test de g√©n√©ration Prisma r√©ussi"
}

# Fonction pour tester le script d'entr√©e modifi√©
test_entrypoint_script() {
    echo "[TEST] üê≥ Test du script d'entr√©e modifi√©..."
    
    # V√©rifier que le script d'entr√©e existe
    if [ ! -f "./docker-entrypoint.sh" ]; then
        echo "[TEST] ‚ùå Script d'entr√©e Docker non trouv√©"
        return 1
    fi
    
    # V√©rifier que le script est ex√©cutable
    if [ ! -x "./docker-entrypoint.sh" ]; then
        echo "[TEST] ‚ùå Script d'entr√©e Docker non ex√©cutable"
        return 1
    fi
    
    # V√©rifier que le script contient les corrections
    if grep -q "mkdir -p /app/generated" ./docker-entrypoint.sh; then
        echo "[TEST] ‚úÖ Cr√©ation du r√©pertoire generated dans le script"
    else
        echo "[TEST] ‚ùå Cr√©ation du r√©pertoire generated manquante"
        return 1
    fi
    
    if grep -q "prisma generate" ./docker-entrypoint.sh; then
        echo "[TEST] ‚úÖ Commande prisma generate pr√©sente"
    else
        echo "[TEST] ‚ùå Commande prisma generate manquante"
        return 1
    fi
    
    if grep -q "sys.path.insert(0, '/app/generated')" ./docker-entrypoint.sh; then
        echo "[TEST] ‚úÖ Ajout du path Python dans le script"
    else
        echo "[TEST] ‚ùå Ajout du path Python manquant"
        return 1
    fi
    
    echo "[TEST] ‚úÖ Script d'entr√©e modifi√© valide"
}

# Fonction pour tester le Dockerfile modifi√©
test_dockerfile() {
    echo "[TEST] üê≥ Test du Dockerfile modifi√©..."
    
    # V√©rifier que le Dockerfile existe
    if [ ! -f "./Dockerfile" ]; then
        echo "[TEST] ‚ùå Dockerfile non trouv√©"
        return 1
    fi
    
    # V√©rifier que le r√©pertoire generated est cr√©√©
    if grep -q "mkdir -p /app/{logs,cache,models,shared,generated}" ./Dockerfile; then
        echo "[TEST] ‚úÖ R√©pertoire generated cr√©√© dans Dockerfile"
    else
        echo "[TEST] ‚ùå R√©pertoire generated non cr√©√© dans Dockerfile"
        return 1
    fi
    
    echo "[TEST] ‚úÖ Dockerfile modifi√© valide"
}

# Fonction pour tester la validation du sch√©ma
test_schema_validation() {
    echo "[TEST] üîç Test de validation du sch√©ma Prisma..."
    
    # Tester la validation du sch√©ma
    if prisma validate --schema=./shared/prisma/schema.prisma; then
        echo "[TEST] ‚úÖ Validation du sch√©ma Prisma r√©ussie"
    else
        echo "[TEST] ‚ùå √âchec de la validation du sch√©ma Prisma"
        return 1
    fi
    
    echo "[TEST] ‚úÖ Validation du sch√©ma r√©ussie"
}

# Fonction principale
main() {
    echo "[TEST] üéØ D√©marrage des tests des corrections Prisma..."
    
    # Configuration du trap pour le nettoyage
    trap cleanup EXIT
    
    # Tests
    test_schema_validation
    test_prisma_generation
    test_entrypoint_script
    test_dockerfile
    
    echo "[TEST] ‚úÖ Tous les tests r√©ussis !"
    echo "[TEST] üöÄ Les corrections Prisma sont pr√™tes"
}

# Ex√©cuter les tests
main
