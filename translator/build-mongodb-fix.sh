#!/bin/bash

echo "üöÄ Construction rapide avec corrections MongoDB pour AI Deploy"
echo "============================================================"

# Variables
IMAGE_NAME="isopen/meeshy-translator"
TAG_MONGODB="mongodb-fix-$(date +%Y%m%d-%H%M)"
TAG_LATEST="mongodb-ovh-latest"
DOCKERFILE="Dockerfile.mongodb"

echo "üìã Tags de l'image:"
echo "  - $IMAGE_NAME:$TAG_MONGODB"
echo "  - $IMAGE_NAME:$TAG_LATEST"

# Construction avec buildx multi-plateforme
echo
echo "üî® Construction de l'image Docker..."

docker buildx build \
    --platform linux/amd64,linux/arm64 \
    --progress=plain \
    -f "$DOCKERFILE" \
    -t "$IMAGE_NAME:$TAG_MONGODB" \
    -t "$IMAGE_NAME:$TAG_LATEST" \
    . \
    --push

if [ $? -eq 0 ]; then
    echo
    echo "‚úÖ Construction et push r√©ussis!"
    echo
    echo "üìã Images disponibles:"
    echo "  - $IMAGE_NAME:$TAG_MONGODB"
    echo "  - $IMAGE_NAME:$TAG_LATEST"
    echo
    echo "üöÄ Pr√™t pour d√©ploiement AI Deploy avec:"
    echo "  Image: $IMAGE_NAME:$TAG_LATEST"
    echo
    echo "üîß Am√©liorations apport√©es:"
    echo "  ‚úÖ Test de connectivit√© DNS am√©lior√©"
    echo "  ‚úÖ Configuration MongoDB optimis√©e pour OVH Cloud"
    echo "  ‚úÖ Timeouts √©tendus pour les connexions lentes"
    echo "  ‚úÖ Retry logic am√©lior√©"
    echo "  ‚úÖ Mode d√©grad√© en cas d'√©chec de migration"
    echo "  ‚úÖ Script de health check d√©di√©"
    echo
else
    echo "‚ùå √âchec de la construction!"
    exit 1
fi
