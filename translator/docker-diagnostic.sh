#!/bin/bash

echo "üîç Diagnostic du service Translator - V√©rification des permissions Prisma"
echo "=================================================================="

# V√©rifier l'utilisateur actuel
echo "üë§ Utilisateur actuel: $(whoami)"
echo "üë• Groupe actuel: $(groups)"
echo "üè† R√©pertoire de travail: $(pwd)"

# V√©rifier les variables d'environnement Prisma
echo ""
echo "üîß Variables d'environnement Prisma:"
echo "DATABASE_URL: ${DATABASE_URL:-Non d√©finie}"
echo "PRISMA_QUERY_ENGINE_BINARY: ${PRISMA_QUERY_ENGINE_BINARY:-Non d√©finie}"
echo "PRISMA_QUERY_ENGINE_LIBRARY: ${PRISMA_QUERY_ENGINE_LIBRARY:-Non d√©finie}"

# V√©rifier les r√©pertoires de cache Prisma
echo ""
echo "üìÅ V√©rification des r√©pertoires de cache Prisma:"

# Cache dans /root/.cache (probl√©matique)
if [ -d "/root/.cache/prisma-python" ]; then
    echo "‚ùå Cache trouv√© dans /root/.cache/prisma-python (probl√©matique):"
    ls -la /root/.cache/prisma-python/binaries/ 2>/dev/null || echo "  - R√©pertoire inaccessible"
else
    echo "‚úÖ Aucun cache dans /root/.cache/prisma-python"
fi

# Cache dans /app/.cache (correct)
if [ -d "/app/.cache/prisma-python" ]; then
    echo "‚úÖ Cache trouv√© dans /app/.cache/prisma-python:"
    ls -la /app/.cache/prisma-python/binaries/ 2>/dev/null || echo "  - R√©pertoire inaccessible"
else
    echo "‚ö†Ô∏è Aucun cache dans /app/.cache/prisma-python"
fi

# Cache dans le r√©pertoire utilisateur
if [ -d "$HOME/.cache/prisma-python" ]; then
    echo "‚úÖ Cache trouv√© dans $HOME/.cache/prisma-python:"
    ls -la $HOME/.cache/prisma-python/binaries/ 2>/dev/null || echo "  - R√©pertoire inaccessible"
else
    echo "‚ö†Ô∏è Aucun cache dans $HOME/.cache/prisma-python"
fi

# V√©rifier les permissions des binaires Prisma
echo ""
echo "üîê V√©rification des permissions des binaires Prisma:"

# Chercher les binaires Prisma dans tous les emplacements possibles
PRISMA_BINARIES=(
    "/root/.cache/prisma-python/binaries/*/node_modules/prisma/query-engine-*"
    "/app/.cache/prisma-python/binaries/*/node_modules/prisma/query-engine-*"
    "$HOME/.cache/prisma-python/binaries/*/node_modules/prisma/query-engine-*"
    "/usr/local/lib/python3.12/site-packages/prisma/binaries/*/node_modules/prisma/query-engine-*"
)

for pattern in "${PRISMA_BINARIES[@]}"; do
    for binary in $pattern; do
        if [ -f "$binary" ]; then
            echo "üìÑ Binaire trouv√©: $binary"
            echo "   Permissions: $(ls -la "$binary")"
            echo "   Propri√©taire: $(stat -c '%U:%G' "$binary")"
            echo "   Ex√©cutable: $([ -x "$binary" ] && echo "‚úÖ Oui" || echo "‚ùå Non")"
            echo ""
        fi
    done
done

# V√©rifier le client Prisma g√©n√©r√©
echo "üì¶ V√©rification du client Prisma g√©n√©r√©:"

if [ -d "/app/generated/prisma" ]; then
    echo "‚úÖ Client Prisma trouv√© dans /app/generated/prisma:"
    ls -la /app/generated/prisma/
    echo ""
else
    echo "‚ùå Client Prisma non trouv√© dans /app/generated/prisma"
fi

if [ -d "/usr/local/lib/python3.12/site-packages/prisma" ]; then
    echo "‚úÖ Client Prisma trouv√© dans /usr/local/lib/python3.12/site-packages/prisma:"
    ls -la /usr/local/lib/python3.12/site-packages/prisma/
    echo ""
else
    echo "‚ùå Client Prisma non trouv√© dans /usr/local/lib/python3.12/site-packages/prisma"
fi

# Test de connexion √† la base de donn√©es
echo "üóÑÔ∏è Test de connexion √† la base de donn√©es:"
if [ -n "$DATABASE_URL" ]; then
    DB_HOST=$(echo $DATABASE_URL | sed -n 's/.*@\([^:]*\):.*/\1/p')
    DB_PORT=$(echo $DATABASE_URL | sed -n 's/.*:\([0-9]*\)\/.*/\1/p')
    DB_NAME=$(echo $DATABASE_URL | sed -n 's/.*\/\([^?]*\).*/\1/p')
    DB_USER=$(echo $DATABASE_URL | sed -n 's/.*:\/\/\([^:]*\):.*/\1/p')
    
    echo "   Host: $DB_HOST"
    echo "   Port: $DB_PORT"
    echo "   Database: $DB_NAME"
    echo "   User: $DB_USER"
    
    if pg_isready -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" >/dev/null 2>&1; then
        echo "   ‚úÖ Connexion r√©ussie"
    else
        echo "   ‚ùå Connexion √©chou√©e"
    fi
else
    echo "   ‚ö†Ô∏è DATABASE_URL non d√©finie"
fi

echo ""
echo "üîç Diagnostic termin√©"
